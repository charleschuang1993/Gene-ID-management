generate_table_of_autocatch_ensembl_version =  function(input_data,attr, useMart_generate_ensembl_release)
  {
    all_release_ensembl = useMart_generate_ensembl_release$all_release_ensembl
    count = 0
    total_out_data = data.frame()
    for (i in 1:length(all_release_ensembl))
     {
       #print(length(input_data[,1]))
       #print(c(count,release_ensembl))
       #print(c(length(input_data[,1]),"test"))
       if(count == 0)
        {
          output_data = getBM(attributes = attr, filters = "ensembl_peptide_id", values = input_data,mart= get(all_release_ensembl[i]))
          if(length(output_data[,1])>0)
           {
            output_data = cbind(output_data,all_release_ensembl[i])
           }

          total_out_data = rbind(total_out_data,output_data)
          non_paired_rbind_output_data = select_non_paired_to_datasets(output_data[,"ensembl_peptide_id"],input_data)
          input_data = as.data.frame(non_paired_rbind_output_data)
          count = count + 1
          #print(c(count,all_release_ensembl[i],length(input_data[,1]),length(output_data[,"ensembl_peptide_id"])))
        }else{
          output_data = getBM(attributes = attr, filters = "ensembl_peptide_id", values = input_data,mart= get(all_release_ensembl[i]))
          if(length(output_data[,1])>0)
           {
            output_data = cbind(output_data,all_release_ensembl[i])
           }
          df_output_data = as.data.frame(output_data[,"ensembl_peptide_id"])
          total_out_data = rbind(total_out_data,output_data)
          non_paired_rbind_output_data = select_non_paired_to_datasets(output_data[,"ensembl_peptide_id"],input_data)
          input_data = as.data.frame(non_paired_rbind_output_data)
          count = count + 1
          #print(c(count,all_release_ensembl[i],length(input_data[,1]),length(df_output_data)))

         }

     }
    list = list(total_out_data = total_out_data,release_ensembl=release_ensembl,count=count)
    return(list)
  }
